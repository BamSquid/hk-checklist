{"version":3,"sources":["components/ListItem.js","components/TableHeader.js","components/Section.js","components/App.js","reportWebVitals.js","index.js"],"names":["ListItem","updatePercentage","e","parent","target","parentElement","isClicked","getAttribute","percent","parseInt","border","updateClicked","children","i","length","style","setAttribute","total","document","getElementById","totalPercent","textContent","details","this","props","headings","row","data","push","percentage","onClick","React","Component","TableHeader","rows","Section","listItems","items","keys","Object","j","includes","names","name","App","console","log","checklist","sections","section","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yPA4CeA,E,4MAxCXC,iBAAmB,SAACC,GAShB,IARA,IACIC,EADYD,EAAEE,OACGC,cACfC,EAAYH,EAAOI,aAAa,gBAChCC,EAAUC,SAASN,EAAOI,aAAa,iBACvCG,EAAuB,SAAdJ,EAAuB,kBAAoB,kBACpDK,EAA8B,UAAdL,EAAwB,OAAS,QACnDM,EAAWT,EAAOS,SAEbC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IACjCD,EAASC,GAAGE,MAAML,OAASA,EAE/BP,EAAOa,aAAa,eAAgBL,GAEpC,IAAIM,EAAQC,SAASC,eAAe,iBAChCC,EAAeX,SAASQ,EAAMV,aAAa,iBAC/Ca,GAAkC,SAAlBT,EAA2BH,GAAqB,EAAXA,EACrDS,EAAMD,aAAa,eAAgBI,GACnCH,EAAMI,YAAc,eAAiBD,EAAe,K,4CAIxD,WAKI,IAJA,IAAIE,EAAUC,KAAKC,MAAMF,QACrBG,EAAWF,KAAKC,MAAMC,SACtBC,EAAM,GAEDb,EAAI,EAAGA,EAAIY,EAASX,OAAQD,IAAK,CACtC,IACIc,EAAOL,EADGG,EAASZ,IAEvBa,EAAIE,KAAK,6BAAKD,KAElB,OACI,oBAAI,eAAcL,EAAQO,WAAY,eAAc,QAASC,QAASP,KAAKtB,iBAA3E,SACKyB,Q,GApCMK,IAAMC,WCiBdC,E,4JAhBX,WAGI,IAFA,IAAIR,EAAWF,KAAKC,MAAMC,SACtBS,EAAO,GACFrB,EAAI,EAAGA,EAAIY,EAASX,OAAQD,IACjCqB,EAAKN,KAAK,6BAAKH,EAASZ,MAE5B,OACI,gCACA,6BACKqB,U,GAVSH,IAAMC,WC8BjBG,E,4JA1BX,WAGI,IAFA,IAAIC,EAAY,GAAIX,EAAW,GAC3BY,EAAQd,KAAKC,MAAMa,MACdxB,EAAI,EAAGA,EAAIwB,EAAMvB,OAAQD,IAAK,CAEnC,IADA,IAAIyB,EAAOC,OAAOD,KAAKD,EAAMxB,IACpB2B,EAAI,EAAGA,EAAIF,EAAKxB,OAAQ0B,IACxBf,EAASgB,SAASH,EAAKE,KAAmB,eAAZF,EAAKE,IACpCf,EAASG,KAAKU,EAAKE,IAG3BJ,EAAUR,KAAK,cAAC,EAAD,CAAqCN,QAASe,EAAMxB,GAAIY,SAAUA,GAAnDF,KAAKC,MAAMkB,MAAQ7B,IAErD,OACI,gCACI,6BAAKU,KAAKC,MAAMmB,OAChB,kCACI,cAAC,EAAD,CAA+ClB,SAAUA,GAAvC,SAAWF,KAAKC,MAAMkB,OACxC,gCACKN,c,GApBHL,IAAMC,W,OCgBbY,MAhBf,WACEC,QAAQC,IAAIC,GAEZ,IADA,IAAIC,EAAW,GACNnC,EAAI,EAAGA,EAAIkC,EAAUjC,OAAQD,IACpCmC,EAASpB,KAAK,cAAC,EAAD,CAA6Be,KAAMI,EAAUlC,GAAGoC,QAASZ,MAAOU,EAAUlC,GAAGwB,OAA/D,UAAYxB,IAE1C,OACE,sBAAKqC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACGF,IAEH,qBAAKG,GAAG,gBAAgBD,UAAU,SAAS,eAAa,IAAxD,gCCHSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,SAM1BiC,K","file":"static/js/main.09471c5f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass ListItem extends React.Component {\r\n\r\n    updatePercentage = (e) => {\r\n        const clicked = e.target;\r\n        var parent = clicked.parentElement;\r\n        const isClicked = parent.getAttribute('data-clicked');\r\n        const percent = parseInt(parent.getAttribute('data-percent'));\r\n        const border = isClicked === 'true' ? 'solid black 1px' : 'solid white 1px';\r\n        const updateClicked = isClicked === 'false' ? 'true' : 'false'\r\n        var children = parent.children;\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n            children[i].style.border = border;\r\n        }\r\n        parent.setAttribute('data-clicked', updateClicked);\r\n\r\n        var total = document.getElementById('total-percent');\r\n        var totalPercent = parseInt(total.getAttribute('data-percent'));\r\n        totalPercent += updateClicked === 'true' ? percent : percent * -1;\r\n        total.setAttribute('data-percent', totalPercent);\r\n        total.textContent = 'Completion: ' + totalPercent + '%';\r\n\r\n    }\r\n\r\n    render() {\r\n        var details = this.props.details;\r\n        var headings = this.props.headings;\r\n        var row = []\r\n\r\n        for (var i = 0; i < headings.length; i++) {\r\n            var heading = headings[i];\r\n            var data = details[heading]\r\n            row.push(<td>{data}</td>)\r\n        }\r\n        return (\r\n            <tr data-percent={details.percentage} data-clicked={'false'} onClick={this.updatePercentage}>\r\n                {row}\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem","import React from 'react'\r\n\r\nclass TableHeader extends React.Component {\r\n    render() {\r\n        var headings = this.props.headings;\r\n        var rows = [];\r\n        for (var i = 0; i < headings.length; i++) {\r\n            rows.push(<th>{headings[i]}</th>)\r\n        }\r\n        return (\r\n            <thead>\r\n            <tr>\r\n                {rows}\r\n            </tr>\r\n        </thead>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableHeader","import React from 'react'\r\nimport ListItem from './ListItem.js'\r\nimport TableHeader from './TableHeader'\r\n\r\nclass Section extends React.Component {\r\n    \r\n    render() {\r\n        var listItems = [], headings = [];\r\n        var items = this.props.items;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var keys = Object.keys(items[i]);\r\n            for (var j = 0; j < keys.length; j++) {\r\n                if (!headings.includes(keys[j]) && keys[j] !== \"percentage\") {\r\n                    headings.push(keys[j]);\r\n                }\r\n            }\r\n            listItems.push(<ListItem key={this.props.names + i} details={items[i]} headings={headings}/>);\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>{this.props.name}</h1>\r\n                <table>\r\n                    <TableHeader key={'table_' + this.props.names} headings={headings}/>\r\n                    <tbody>\r\n                        {listItems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Section;","import './css/App.css';\r\nimport Section from './Section.js'\r\nimport checklist from '../checklist.json'\r\n\r\nfunction App() {\r\n  console.log(checklist);\r\n  var sections = [];\r\n  for (var i = 0; i < checklist.length; i++) {\r\n    sections.push(<Section key={'section' + i} name={checklist[i].section} items={checklist[i].items} />);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {sections}\r\n      </header>\r\n      <div id='total-percent' className='footer' data-percent='0'>Completion: 0%</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}