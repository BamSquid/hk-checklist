{"version":3,"sources":["components/ListItem.js","components/TableHeader.js","components/Section.js","components/App.js","reportWebVitals.js","index.js"],"names":["ListItem","updatePercentage","e","clicked","target","tr","tagName","toLowerCase","parentElement","isClicked","getAttribute","percent","parseInt","border","background","color","updateClicked","children","i","length","style","setAttribute","total","document","getElementById","totalPercent","isNaN","section","props","num_masks","maskPercent","maskCount","Math","floor","num_soul","soulPercent","soulCount","notchCounter","numNotches","textContent","classList","add","remove","contains","details","this","headings","row","data","push","percentage","onClick","React","Component","TableHeader","rows","Section","convertToTitleCase","title","split","map","w","toUpperCase","substr","join","selectAll","sectionCheck","name","replace","clickDir","child","click","listItems","table_headings","headings_details","items","keys","Object","j","heading","includes","id","App","sections","checklist","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1a1c1fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass ListItem extends React.Component {\r\n  updatePercentage = (e) => {\r\n    const clicked = e.target;\r\n    var tr = clicked.tagName.toLowerCase() === 'tr' ? clicked : clicked.parentElement;\r\n    const isClicked = tr.getAttribute(\"data-clicked\");\r\n    const percent = parseInt(tr.getAttribute(\"data-percent\"), 10);\r\n    const border = isClicked === \"true\" ? \"solid white 1px\" : \"solid black 1px\";\r\n    const background = isClicked === \"true\" ? \"#282c34\" : \"white\";\r\n    const color = isClicked === \"true\" ? \"white\" : \"black\";\r\n    const updateClicked = isClicked === \"false\" ? \"true\" : \"false\";\r\n    var children = tr.children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      children[i].style.border = border;\r\n      children[i].style.background = background;\r\n      children[i].style.color = color;\r\n    }\r\n    tr.setAttribute(\"data-clicked\", updateClicked);\r\n\r\n    var total = document.getElementById(\"total-percent\");\r\n    var totalPercent = parseInt(total.getAttribute(\"data-percent\"), 10);\r\n    if (!isNaN(percent)) {\r\n      totalPercent += updateClicked === \"true\" ? percent : percent * -1;\r\n    }\r\n    else {\r\n      var section = this.props.section;\r\n      if (section === \"masks\") {\r\n        var num_masks = parseInt(total.getAttribute(\"data-masks\"), 10);\r\n        num_masks += updateClicked === \"true\" ? 1 : -1;\r\n        total.setAttribute(\"data-masks\", num_masks);\r\n\r\n        const maskPercent = total.getAttribute(\"data-mask-percent\");\r\n        const maskCount = Math.floor(num_masks / 4);\r\n        if (maskCount > maskPercent) {\r\n          totalPercent += 1;\r\n          total.setAttribute(\"data-mask-percent\", maskCount);\r\n        }\r\n        else if (maskCount < maskPercent) {\r\n          totalPercent -= 1;\r\n          total.setAttribute(\"data-mask-percent\", maskCount);\r\n        }\r\n      }\r\n      else if (section === \"soul vessels\") {\r\n        var num_soul = parseInt(total.getAttribute(\"data-soul\"), 10);\r\n        num_soul += updateClicked === \"true\" ? 1 : -1;\r\n        total.setAttribute(\"data-soul\", num_soul);\r\n\r\n        const soulPercent = total.getAttribute(\"data-soul-percent\");\r\n        const soulCount = Math.floor(num_soul / 3);\r\n        if (soulCount > soulPercent) {\r\n          totalPercent += 1;\r\n          total.setAttribute(\"data-soul-percent\", soulCount);\r\n        }\r\n        else if (soulCount < soulPercent) {\r\n          totalPercent -= 1;\r\n          total.setAttribute(\"data-soul-percent\", soulCount);\r\n        }\r\n      }\r\n      else {\r\n        var notchCounter = document.getElementById('total-notches');\r\n        var numNotches = parseInt(notchCounter.getAttribute('data-notches'), 10);\r\n        numNotches += updateClicked === \"true\" ? 1 : -1;\r\n        notchCounter.setAttribute('data-notches', numNotches);\r\n        notchCounter.textContent = \"Charm Notches: \" + numNotches;\r\n\r\n        if (numNotches === 11) {\r\n          notchCounter.classList.add('complete');\r\n        }\r\n        else {\r\n          notchCounter.classList.remove('complete');\r\n        }\r\n      }\r\n    }\r\n\r\n    total.setAttribute(\"data-percent\", totalPercent);\r\n    total.textContent = \"Completion: \" + totalPercent + \"%\";\r\n    if (totalPercent === 112) {\r\n      total.classList.add('complete');\r\n    }\r\n    else {\r\n        if (total.classList.contains('complete')) {\r\n            total.classList.remove('complete');\r\n        }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var details = this.props.details;\r\n    var headings = this.props.headings;\r\n    var row = [];\r\n\r\n    for (var i = 0; i < headings.length; i++) {\r\n      var heading = headings[i];\r\n      var data = details[heading];\r\n      row.push(<td>{data}</td>);\r\n    }\r\n    return (\r\n      <tr\r\n        data-percent={details.percentage}\r\n        data-clicked={\"false\"}\r\n        onClick={this.updatePercentage}\r\n      >\r\n        {row}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\n\r\nclass TableHeader extends React.Component {\r\n  render() {\r\n    var headings = this.props.headings;\r\n    var rows = [];\r\n    for (var i = 0; i < headings.length; i++) {\r\n      rows.push(<th>{headings[i]}</th>);\r\n    }\r\n    return (\r\n      <thead>\r\n        <tr>{rows}</tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;","import React from \"react\";\r\nimport ListItem from \"./ListItem.js\";\r\nimport TableHeader from \"./TableHeader\";\r\n\r\nclass Section extends React.Component {\r\n  convertToTitleCase = (title) => {\r\n    title = title\r\n      .split(\"_\")\r\n      .map((w) => w[0].toUpperCase() + w.substr(1).toLowerCase())\r\n      .join(\" \");\r\n    return title;\r\n  };\r\n\r\n  selectAll = (e) => {\r\n    const sectionCheck = this.props.name.toLowerCase().replace(' ', '');\r\n    const tbody = document.getElementById('tbody_' + sectionCheck);\r\n    const children = tbody.children;\r\n    var clickDir = e.target.getAttribute('data-click-dir');\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      var child = children[i];\r\n      if (clickDir === 'click') {\r\n        if (child.getAttribute('data-clicked') === 'false') {\r\n          child.click();\r\n        }\r\n        e.target.setAttribute('data-click-dir', 'unclick');\r\n      }\r\n      else {\r\n        if (child.getAttribute('data-clicked') === 'true') {\r\n          child.click();\r\n        }\r\n        e.target.setAttribute('data-click-dir', 'click');\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var listItems = [],\r\n      table_headings = [],\r\n      headings_details = [];\r\n    var items = this.props.items;\r\n    for (var i = 0; i < items.length; i++) {\r\n      var keys = Object.keys(items[i]);\r\n      for (var j = 0; j < keys.length; j++) {\r\n        var heading = this.convertToTitleCase(keys[j]);\r\n        if (!table_headings.includes(heading) && heading !== \"Percentage\") {\r\n          table_headings.push(heading);\r\n          headings_details.push(keys[j]);\r\n        }\r\n      }\r\n      listItems.push(\r\n        <ListItem\r\n          key={this.props.name.toLowerCase().replace(\" \", \"\") + i}\r\n          details={items[i]}\r\n          headings={headings_details}\r\n          section={this.props.name.toLowerCase()}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <h1\r\n        onClick={this.selectAll}\r\n        data-click-dir='click'\r\n        >\r\n          {this.props.name}\r\n        </h1>\r\n        <table>\r\n          <TableHeader\r\n            key={\"table_\" + this.props.name.toLowerCase().replace(\" \", \"\")}\r\n            headings={table_headings}\r\n          />\r\n          <tbody id={'tbody_' + this.props.name.toLowerCase().replace(' ', '')}>{listItems}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;","import \"./css/App.css\";\r\nimport Section from \"./Section.js\";\r\nimport checklist from \"../checklist.json\";\r\n\r\nfunction App() {\r\n  var sections = [];\r\n  for (var i = 0; i < checklist.length; i++) {\r\n    sections.push(\r\n      <Section\r\n        key={\"section\" + i}\r\n        name={checklist[i].section}\r\n        items={checklist[i].items}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">{sections}</header>\r\n      <div className=\"footer\">\r\n        <div\r\n          id=\"total-percent\"\r\n          data-percent=\"0\"\r\n          data-masks=\"0\"\r\n          data-mask-percent=\"0\"\r\n          data-soul=\"0\"\r\n          data-soul-percent=\"0\"\r\n          style={{'padding-inline-start': '15px', 'padding-inline-end': '15px'}}\r\n        >\r\n          Completion: 0%\r\n        </div>\r\n        <div\r\n          id=\"total-notches\"\r\n          data-notches=\"3\"\r\n          style={{'padding-inline-start': '40px', 'padding-inline-end': '40px'}}\r\n        >\r\n          Charm Notches: 3\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}